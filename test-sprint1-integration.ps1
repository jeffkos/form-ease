#!/usr/bin/env pwsh
# Script PowerShell pour ex√©cuter tous les tests d'int√©gration Sprint 1

Write-Host "üöÄ LANCEMENT TESTS D'INT√âGRATION SPRINT 1" -ForegroundColor Green
Write-Host "===============================================" -ForegroundColor Cyan

# Variables
$BackendPath = "c:\Users\Jeff KOSI\Desktop\FormEase\formease\backend"
$TestResults = @()

# Fonction pour ex√©cuter un test et capturer les r√©sultats
function Run-Test {
    param(
        [string]$TestFile,
        [string]$Description
    )
    
    Write-Host "`nüß™ Test: $Description" -ForegroundColor Yellow
    Write-Host "Fichier: $TestFile" -ForegroundColor Gray
    
    try {
        $Result = & npm test $TestFile 2>&1
        $ExitCode = $LASTEXITCODE
        
        if ($ExitCode -eq 0) {
            Write-Host "‚úÖ SUCC√àS" -ForegroundColor Green
            $TestResults += @{
                Test = $Description
                Status = "PASS"
                Details = "Tous les tests passent"
            }
        } else {
            Write-Host "‚ùå √âCHEC" -ForegroundColor Red
            $TestResults += @{
                Test = $Description
                Status = "FAIL"
                Details = $Result | Select-String "failing|error" | Select-Object -First 3
            }
        }
    } catch {
        Write-Host "‚ùå ERREUR D'EX√âCUTION" -ForegroundColor Red
        $TestResults += @{
            Test = $Description
            Status = "ERROR"
            Details = $_.Exception.Message
        }
    }
}

# Changer vers le r√©pertoire backend
Set-Location $BackendPath

Write-Host "`nüìã V√©rification de l'environnement..." -ForegroundColor Cyan

# V√©rifier que Jest est install√©
if (-not (Test-Path "node_modules\.bin\jest.cmd")) {
    Write-Host "‚ö†Ô∏è Jest non trouv√©, installation..." -ForegroundColor Yellow
    npm install --save-dev jest supertest
}

# V√©rifier les variables d'environnement de test
if (-not (Test-Path ".env")) {
    Write-Host "‚ö†Ô∏è Fichier .env manquant, cr√©ation depuis .env.example..." -ForegroundColor Yellow
    Copy-Item ".env.example" ".env"
}

Write-Host "`nüéØ EX√âCUTION DES TESTS SPRINT 1" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Cyan

# 1. Tests des quotas et limitations
Run-Test "tests/quota.integration.test.js" "Syst√®me de Quotas et Limitations"

# 2. Tests des paiements Stripe
Run-Test "tests/payment.integration.test.js" "Paiements et Abonnements Stripe"

# 3. Tests des formulaires payants
Run-Test "tests/form-payment.integration.test.js" "Formulaires Payants"

# 4. Suite compl√®te d'int√©gration
Run-Test "tests/sprint1.integration.test.js" "Suite Compl√®te Sprint 1"

# 5. Tests existants (pour non-r√©gression)
Write-Host "`nüîÑ Tests de Non-R√©gression" -ForegroundColor Cyan
Run-Test "tests/auth.test.js" "Authentification (Non-r√©gression)"
Run-Test "tests/validation.test.js" "Validation (Non-r√©gression)"

Write-Host "`nüìä RAPPORT FINAL DES TESTS" -ForegroundColor Green
Write-Host "===========================" -ForegroundColor Cyan

$PassCount = ($TestResults | Where-Object { $_.Status -eq "PASS" }).Count
$FailCount = ($TestResults | Where-Object { $_.Status -eq "FAIL" }).Count
$ErrorCount = ($TestResults | Where-Object { $_.Status -eq "ERROR" }).Count
$TotalCount = $TestResults.Count

Write-Host "`nR√©sum√©:" -ForegroundColor White
Write-Host "‚úÖ Tests r√©ussis: $PassCount" -ForegroundColor Green
Write-Host "‚ùå Tests √©chou√©s: $FailCount" -ForegroundColor Red
Write-Host "‚ö†Ô∏è Erreurs: $ErrorCount" -ForegroundColor Yellow
Write-Host "üìã Total: $TotalCount" -ForegroundColor Cyan

# D√©tails des √©checs
if ($FailCount -gt 0 -or $ErrorCount -gt 0) {
    Write-Host "`nüîç D√âTAILS DES √âCHECS:" -ForegroundColor Red
    $TestResults | Where-Object { $_.Status -ne "PASS" } | ForEach-Object {
        Write-Host "`n‚Ä¢ $($_.Test)" -ForegroundColor Yellow
        Write-Host "  Status: $($_.Status)" -ForegroundColor Red
        Write-Host "  D√©tails: $($_.Details)" -ForegroundColor Gray
    }
}

# Score final
$SuccessRate = [math]::Round(($PassCount / $TotalCount) * 100, 1)
Write-Host "`nüéØ TAUX DE R√âUSSITE: $SuccessRate%" -ForegroundColor $(if ($SuccessRate -ge 80) { "Green" } elseif ($SuccessRate -ge 60) { "Yellow" } else { "Red" })

if ($SuccessRate -eq 100) {
    Write-Host "`nüéâ SPRINT 1 - TOUS LES TESTS PASSENT!" -ForegroundColor Green
    Write-Host "FormEase est pr√™t pour la production!" -ForegroundColor Cyan
} elseif ($SuccessRate -ge 80) {
    Write-Host "`n‚úÖ SPRINT 1 - Tests majoritairement r√©ussis" -ForegroundColor Yellow
    Write-Host "Quelques ajustements mineurs n√©cessaires" -ForegroundColor Gray
} else {
    Write-Host "`n‚ö†Ô∏è SPRINT 1 - Tests n√©cessitent attention" -ForegroundColor Red
    Write-Host "Corrections requises avant d√©ploiement" -ForegroundColor Gray
}

Write-Host "`nüìù Tests d'int√©gration Sprint 1 termin√©s." -ForegroundColor Cyan
Write-Host "Logs d√©taill√©s disponibles dans le terminal ci-dessus." -ForegroundColor Gray

# Retourner au r√©pertoire original
Set-Location $PSScriptRoot
