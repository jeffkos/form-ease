#!/usr/bin/env node

/**
 * Script pour g√©n√©rer des cl√©s JWT s√©curis√©es
 * Usage: node generate-jwt-secret.js
 */

const crypto = require('crypto');

function generateJWTSecret() {
  // G√©n√®re une cl√© de 64 caract√®res (512 bits)
  return crypto.randomBytes(32).toString('hex');
}

function generateSecurePassword() {
  // G√©n√®re un mot de passe s√©curis√©
  const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';
  let password = '';
  for (let i = 0; i < 24; i++) {
    password += charset.charAt(Math.floor(Math.random() * charset.length));
  }
  return password;
}

console.log('üîê G√©n√©rateur de Cl√©s S√©curis√©es pour FormEase\n');

console.log('üìã Ajoutez ces valeurs √† votre fichier .env:\n');

console.log('# Cl√© JWT (copiez-collez dans .env)');
console.log(`JWT_SECRET="${generateJWTSecret()}"`);
console.log('');

console.log('# Exemple de mot de passe s√©curis√© pour la base de donn√©es');
console.log(`# DB_PASSWORD="${generateSecurePassword()}"`);
console.log('');

console.log('# Exemple de mot de passe s√©curis√© pour SMTP');
console.log(`# SMTP_PASS="${generateSecurePassword()}"`);
console.log('');

console.log('‚ö†Ô∏è  IMPORTANT:');
console.log('- Gardez ces cl√©s secr√®tes et ne les partagez jamais');
console.log('- Utilisez des valeurs diff√©rentes pour chaque environnement');
console.log('- Stockez-les de mani√®re s√©curis√©e (gestionnaire de mots de passe)');
